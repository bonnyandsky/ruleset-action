name: Config Update

# 触发条件
on:
  push:
    branches: [ main ]  # 当推送到 main 分支时触发
  workflow_dispatch:  # 允许手动触发
  schedule:
    - cron: '0 12 * * *'  # 每天中午12点触发

jobs:
  build:
    runs-on: ubuntu-latest  # 使用最新的 Ubuntu 镜像

    steps:
    # 第一步：检出代码
    - uses: actions/checkout@v2  # 检出仓库代码

    # 第二步：安装 sing-box
    - name: "Setup sing-box"
      env:
        SING_BOX_DEB_URL: "https://github.com/SagerNet/sing-box/releases/download/v1.11.0-beta.13/sing-box_1.11.0-beta.13_linux_amd64.deb"
      run: |
          set -Eeuo pipefail  # 设置脚本在遇到错误时立即退出
          wget -O sing-box.deb $SING_BOX_DEB_URL  # 下载 sing-box
          sudo dpkg -i sing-box.deb  # 安装 sing-box

    # 第三步：设置 Python 环境
    - name: Set up Python3
      uses: actions/setup-python@v2  # 设置 Python 环境
      with:
        python-version: 3.x  # 使用 Python 3.x 版本

    # 第四步：安装 Python 依赖
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip  # 升级 pip
        pip install pandas requests pyyaml  # 安装所需的 Python 包

    # 第五步：准备日志文件
    - name: Prepare log file
      run: |
        # 创建log.txt并设置读写权限
        touch ./log.txt  # 创建 log.txt 文件
        chmod 666 ./log.txt  # 设置 log.txt 的读写权限
        
    # 第六步：运行主脚本
    - name: Run script
      run: python main.py  # 运行 main.py 脚本

    # 第七步：提交并推送更改
    - name: Commit and push config.json
      run: |
        git config --global user.email "action@github.com"  # 设置 Git 用户邮箱
        git config --global user.name "GitHub Action"  # 设置 Git 用户名
        
        # 添加log.txt和规则文件
        git add ./rule/*.json  # 添加所有 .json 文件
        git add ./rule/*.srs  # 添加所有 .srs 文件
        git add ./log.txt  # 添加 log.txt
        git add ./route.json  # 添加 route.json
    
        # 检查是否有文件被修改
        if git diff --staged --quiet; then
          echo "No changes to commit"  # 如果没有更改，则输出信息并退出
          exit 0
        else
          git commit -m "Update rules"  # 提交更改
          git push  # 推送更改到远程仓库
        fi
